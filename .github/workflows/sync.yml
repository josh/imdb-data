name: Sync

on:
  schedule:
    - cron: "0 7 * * *"
  workflow_dispatch:

permissions:
  contents: write

jobs:
  run:
    runs-on: ubuntu-latest
    concurrency: sync

    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4

      - name: Checkout data branch
        uses: actions/checkout@v4
        with:
          ref: "data"
          path: "data"
          fetch-depth: 0

      - name: Restore git mtimes
        run: |
          git ls-tree --name-only HEAD | while read -r path; do
              commit_date=$(git log -1 --format="%ad" --date=raw -- "$path" | cut -d' ' -f1)
              touch -d "@$commit_date" "$path"
              echo "Set '$path' mtime to $(date -d "@$commit_date")"
          done
        working-directory: data/

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"

      - name: Install uv
        run: pipx install uv

      - name: Install dependencies
        run: |
          uv pip install --system --constraint requirements.txt '.'

      - name: Load cache
        uses: actions/cache@v4
        with:
          path: .cache/
          key: cache-${{ github.run_id }}
          restore-keys: |
            cache-

      - name: Load cookie jar
        uses: actions/cache@v4
        with:
          path: cookies.pickle
          key: cookies-${{ github.run_id }}
          restore-keys: |
            cookies-

      - name: Migrate cookie file
        run: |
          if [ ! -f cookies.pickle ]; then
              echo "Using cached cookies.pickle"
              cp .cache/cookies.pickle cookies.pickle
          fi

      - name: Import cookies
        if: ${{ env.IMDB_COOKIE != '' }}
        run: |
          imdb-data --verbose import-cookies
        env:
          IMDB_COOKIE_FILE: ".cache/cookies.pickle"
          IMDB_COOKIE: ${{ secrets.IMDB_COOKIE }}

      - name: Check watchlist
        id: check-watchlist
        run: |
          imdb-data --verbose check-watchlist data/watchlist.csv | tee -a "$GITHUB_OUTPUT"
        env:
          IMDB_COOKIE_FILE: ".cache/cookies.pickle"
          IMDB_USER_ID: ${{ secrets.IMDB_USER_ID }}

      - name: Check ratings
        id: check-ratings
        run: |
          imdb-data --verbose check-ratings data/ratings.csv | tee -a "$GITHUB_OUTPUT"
        env:
          IMDB_COOKIE_FILE: ".cache/cookies.pickle"
          IMDB_USER_ID: ${{ secrets.IMDB_USER_ID }}

      - name: Export watchlist
        if: ${{ steps.check-watchlist.outputs.outdated == 'true' }}
        run: |
          imdb-data --verbose download-export "$IMDB_WATCHLIST_ID" --output data/watchlist.csv
        env:
          IMDB_COOKIE_FILE: ".cache/cookies.pickle"
          IMDB_WATCHLIST_ID: ${{ secrets.IMDB_WATCHLIST_ID }}

      - name: Export ratings
        if: ${{ steps.check-ratings.outputs.outdated == 'true' }}
        run: |
          imdb-data --verbose download-export ratings --output data/ratings.csv
        env:
          IMDB_COOKIE_FILE: ".cache/cookies.pickle"

      - name: Commit changes
        id: commit
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add .
          if git commit --message "Update data"; then
              echo "committed=true" >>"$GITHUB_OUTPUT"
          else
              echo "committed=false" >>"$GITHUB_OUTPUT"
          fi
        working-directory: data/

      - name: Push changes
        if: steps.commit.outputs.committed == 'true'
        run: git push origin refs/heads/data
        working-directory: data/
